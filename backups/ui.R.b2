## app.R ##
# Reference:  	https://rstudio.github.io/shinydashboard/
# Icons:	http://fontawesome.io/icons/
#		http://getbootstrap.com/components/#glyphicons

# Notes:
#
#

library(shinydashboard)
library(leaflet)
library(MASS)
library(survival)
library(RColorBrewer)
display.brewer.all()
library(tidyverse)
library(RSQLite)

ui <- dashboardPage(
	skin="red",

  dashboardHeader(
        #title = "****** TRADE SECRET ******  THE CLIMATE SERVICE FINANCIAL IMPACTS AND CLIMATE SCORE PLATFORM  ****** TRADE SECRET ******", titleWidth=1600,
	title = "The Climate Service",
	dropdownMenu(type = "messages",
                     messageItem(
                       from = "Sarah P. - Operations Manager",
                       message = "Finished loading data you requested.",
                       icon = icon("exclamation"),
                       time = "15 minutes ago"
                     ),
                     messageItem(
                       from = "Robin H. - ESG Manager",
                       message = "Did you include CSR effects?",
                       icon = icon("question"),
                       time = "yesterday"
                     ),
                     messageItem(
                       from = "Craig T. - Marketing",
                       message = "New products brainstorm",
                       icon = icon("calendar"),
                       time = "yesterday"
                     )
        )
  ),

  ## Sidebar content
  dashboardSidebar(
	width=300,
	sidebarMenu(id = "sidebar",
	menuItem("Log In", tabName = "login", icon = icon("lock")),
	menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
      	menuItem("Settings", tabName = "settings", icon = icon("cog")),
      	menuItem("Corporate Risk Analyzer", tabName = "corporate", icon = icon("building-o")),
      	menuItem("Portfolio Analyzer", tabName = "portfolios", icon = icon("briefcase")),
      	menuItem("Project Analyzer", tabName = "projects", icon = icon("bullseye")),
      	menuItem("Compliance Reporter", tabName = "plans", icon = icon("line-chart"),
          menuSubItem("Compliance - TCFD", tabName = "TCFD"),
          menuSubItem("Climate Action Plan", tabName = "CAP"),
          menuSubItem("Project Plans", tabName = "ProjectPlans")
      ),
      	menuItem("Technical Details", tabName = "overview", icon = icon("podcast"),
      	  menuSubItem("LOCALIZED CLIMATE PROBABILITIES", tabName = "localclimate", icon = icon("cubes")),
      	  menuSubItem("SECTOR IMPACT FUNCTIONS", tabName = "impactfunctions", icon = icon("cloud-download", lib = "glyphicon")),
      	  menuSubItem("PROBABLISTIC IMPACT ESTIMATE", tabName = "impactestimate", icon = icon("cog", lib = "glyphicon")),
      	  menuSubItem("FINANCIAL EFFECTS", tabName = "financialeffects", icon = icon("usd", lib = "glyphicon")),

      	  menuSubItem("SUSTAINABLE INFRASTRUCTURE", tabName = "sustainable_infrastructure", icon = icon("tree-conifer", lib = "glyphicon")),
      	  menuSubItem("ADAPTATION BENEFIT/COST PLANNING", tabName = "adaptationplanning", icon = icon("tree-deciduous", lib = "glyphicon")),

      	  menuSubItem("OVERALL CLIMATE SCORE", tabName = "climatescore", icon = icon("certificate", lib = "glyphicon")),
      	  menuSubItem("DATABASE", tabName = "database", icon = icon("certificate", lib = "glyphicon"))
	  )
    	)
  ),

  ## Body content
  dashboardBody(
    tabItems(
    
      # Login tab content
      tabItem(tabName = "login",
              fluidRow(
                tabBox(
                  tabPanel(title = "Log In",
                    textInput("username","User Name",value=""),
                    textInput("userpass","Password",value="")
                    )
                  )
              ),

              fluidRow(
                box(
	        title =	textOutput("login_response")
		   )
              )
      ),

      # First tab content
      tabItem(tabName = "dashboard",
              fluidRow(
                  valueBox(437, "TCS Climate Score", icon = icon("thermometer-3"), color = "red")
              ),
              fluidRow(
                  valueBox(14, "Locations", icon = icon("map-marker"), color = "teal"),
                  valueBox(3, "Users", icon = icon("user"), color = "aqua"),
                  valueBox(2, "Plans", icon = icon("line-chart"), color = "blue")
              )
      ),

      # Second tab content
      tabItem(tabName = "settings",
              fluidRow(
                tabBox(
                  tabPanel(title = "Basics",
                    textInput("companyName","Company Name",value="Micron"),
                    selectInput("cbGroupBizType","Industry Sector",
                      c("Beverage","Agriculture","Packaged Foods/Meats","Paper & forest","Manufacturing","Metals & mining", "Chemicals", "Real Estate Management/Development","Transportation","Oil & gas","Electric Utilities"),
                      selected = c("Manufacturing")
                    )
                  ),
		tabPanel(title = "Location 1",
                    textInput("location1","Corporate Headquarters",value = "8000 S Federal Way, Boise, ID 83716"),
                    htmlOutput("frame"),
                    hr(),
                    checkboxGroupInput("cbBusinessFunctions","Business functions performed at this location",
                                c("Clean Room Manufacturing","Shipping","Inventory Management","R&D","HR","Legal","Marketing/Sales","Corporate Governance"),
                                selected = c("Clean Room Manufacturing","R&D")
                    ),
                    hr(),
                    actionButton("addLocation","Add a location")
                  ),
                  tabPanel(title = "Users",
                    valueBox(1, "Julia Grant", icon = icon("user"), color = "teal"),
                    valueBox(1, "Joe Robinson", icon = icon("user"), color = "teal"),
                    valueBox(1, "Norm Armour", icon = icon("user"), color = "teal"),
                    actionButton("addUser","Add a user")
                  ),
		tabPanel(title = "Location 2",
                    textInput("location2","Singapore Facilities",value = "4 facilities in Singapore"),
                    htmlOutput("frame_singapore"),
                    hr(),
                    checkboxGroupInput("cbBusinessFunctions","Business functions performed at this location",
                                c("Clean Room Manufacturing","Shipping","Inventory Management","R&D","HR","Legal","Marketing/Sales","Corporate Governance"),
                                selected = c("Clean Room Manufacturing","R&D")
                    ),
                    hr(),
                    actionButton("addLocation","Add a location")
                  ),
                  tabPanel(title = "Users",
                    valueBox(1, "TBD", icon = icon("user"), color = "teal"),
                    valueBox(1, "TBD", icon = icon("user"), color = "teal"),
                    valueBox(1, "TBD", icon = icon("user"), color = "teal"),
                    actionButton("addUser","Add a user")
                  )
                )#tabBox
              )#fluidRow
            ),

      # Third tab content
      tabItem(tabName = "corporate",
              fluidRow(
                tabBox(width = "500",
		tabPanel(title="Screening level",
                    selectInput("cbLocation","Location",
                               c("Boise","Singapore","Malaysia","Scotland"),
                               selected = c("Boise")
                    ),
                    sliderInput("siTimeframe", "Timeframe", 1, 30, 5, step=1, animate=TRUE),
                    htmlOutput('txtImpact1'),
                    htmlOutput('txtImpact2'),
                    htmlOutput('txtImpact3'),
                    hr(),
                    infoBoxOutput('infobox1')
                    # infoBox(title="EPS Value at Risk",value="0.187%",color="aqua",icon = icon("percent")),
                    # infoBox(title="Revenue at Risk",value="$2,618,782",color="aqua",icon = icon("usd")),
                    # infoBox(title="Expenses at Risk",value="$34,729,133",color="aqua",icon = icon("usd")),
                    # infoBox(title="Assets at Risk",value="$215,362,765",color="aqua",icon = icon("usd")),
                    # infoBox(title="Liabilities at Risk",value="$1,824,773",color="aqua",icon = icon("usd"))
                  )
                )#tabBox
              )#fluidRow
      ),#tabItem corporate

      # Fourth tab content
      tabItem(tabName = "portfolios",
              fluidRow(
                tabBox(title = "Investment Portfolio Analyzer",
                tabPanel(
                  title = "Set up",
                  actionButton("addStock","Add a Listed Equity")
                ),
                tabPanel(title="Analyze",
                    "Listing of equities with relative risk",br(),"Ability to drill down")
              )
              )
      ),

      # Fifth tab content
      tabItem(tabName = "projects",
              fluidRow(
                box(
                  title = "Projects","This should have tabs for the investment lifecycle that Chiara shared."
                )
              )
      ),

      # Sixth tab content
      tabItem(tabName = "plans",
              fluidRow(
                box(
                  title = "Plans"
                )
              )
      ),
       #Plans tabSubItems
      tabItem("TCFD",
              fluidRow(
     		tabBox(title = "TCFD Reporting",
                       tabPanel(title = "Governance",
                                textAreaInput("TCFD-Gov-a","Board Oversight", width = 500, value="Describe the board's oversight of climate-related risks and opportunities."),
                                textAreaInput("TCFD-Gov-b","Management's Role", width = 500, value="Describe management's role in assessing and managing climate-related risks and opportunities.")
                       ),
                       tabPanel(title = "Strategy",
                                textAreaInput("TCFD-Strat-a","Climate Risks and Opportunities", width = 500, value = "Describe the climate-related risks and opportunities the organization has identified over the short, medium, and long term."),
                                checkboxGroupInput("chkbxRisks","Risks & Opportunities", width = 500, c("Policy & Legal Risk","Technology Risk","Market Risk","Reputation Risk","Acute Physical Risk","Chronic Physical Risk","Resource Efficiency","Energy Source","Products/Services","Markets","Resilience"),selected = c("Energy Source","Acute Physical Risk","Chronic Physical Risk")),
                                textAreaInput("TCFD-Strat-b","Impact of Risks", width = 500, value = "Describe the impact of climate-related risks and opportunities on the organization's businesses, strategy, and financial planning.")
                       ),
                       tabPanel(title = "Risk Management",
                                textAreaInput("TCFD-Gov-a","Processes for Identifying Risks", width = 500, value="Describe the processes for identifying & assessing climate-related risks and opportunities."),
                                textAreaInput("TCFD-Gov-b","Processes for Managing", width = 500, value="Describe the processes managing climate-related risks."),
                                textAreaInput("TCFD-Gov-a","Process Integration", width = 500, value="Describe how processes for identifying, assessing, and managing climate-related risks are intgrated into the organization's overall management.")
                       ),
                       tabPanel(title = "Metrics and Targets"),
                       tabPanel(title="Financial Impacts",
                                dataTableOutput("corpFinImpacts")
                       )#tabPanel
              ))
      ),
 
      tabItem("CAP",
              box(
                title = "Climate Action Plan"
              )
              ),
      tabItem("ProjectPlans",
              box(
                title = "Project Plans"
              )
              ),

      tabItem(tabName = "overview", 
        h1("PROTOTYPE PRODUCTS:", col="red"),
        h2("1.  Project Analyzer"),
        h2("2.  Portfolio Analyzer"),
        h2("3.  Corporate Risk Monitoring"),
        h2("4.  TCFD Reporting")
      ),

      tabItem(tabName = "localclimate",
        h2("Localized probability distributions from historical and projected daily data"),
        fluidRow(
	# More information on cascading style sheets at: http://shiny.rstudio.com/articles/css.html.
	#includeCSS("./www/darkly.css"),
          box(plotOutput("climplot1", height = 200)),
          box(plotOutput("climplot2", height = 200)),
          box(plotOutput("climplot3", height = 200)),
          box(plotOutput("climplot4", height = 200)),
          box(title="Ensemble Distributions Evolve Through Time", background = "red", solidHeader = TRUE, plotOutput("climplot5", height = 300)),
          box(
            title = "Climate Data Controls",
            sliderInput("bins", "Number of bins:", 10, 100, 50, step=10, animate=TRUE)
          )
        )
      ),

      tabItem(tabName = "impactfunctions",
        h2("Sector-specific impact functions quantify impacts on infrastructure, workforce, revenue..."),
        tabBox(width=12, 
        tabPanel(title = "GENERAL",
	fluidRow(
          box(title="Impact Functions - Combined", background = "red", solidHeader = TRUE, plotOutput("impactplot3", height = 200)),
          box(
            title = "Relative Weight of Impact Functions",
            sliderInput("impactfunctionweight", "Sigmoid weight (quadratic weight is the remainder):", 0, 1, 0.5, step=0.1, animate=TRUE)
          )
	),
        
	fluidRow(
          box(title="Impact Functions - Sigmoidal", background = "blue", solidHeader = TRUE, plotOutput("impactplot1", height = 200)),
          box(title="Impact Functions - Quadratic", background = "blue", solidHeader = TRUE, plotOutput("impactplot2", height = 200)),
          box(
            title = "Impact Function Controls - Sigmoidal",
            sliderInput("sigmoidlimit", "Sigmoid limit:", -100, 100, -75, step=10, animate=TRUE),
            sliderInput("sigmoidsteepness", "Sigmoid steepness:", 0.1, 10, 2, step=0.5, animate=TRUE),
            sliderInput("sigmoidmidpoint", "Sigmoid midpoint:", 270, 320, 295, step=1, animate=TRUE)
          ),
          box(
            title = "Impact Function Controls - Quadratic",
            sliderInput("quadraticlimit", "Quadratic limit:", 10, 100, 50, step=10, animate=TRUE),
            sliderInput("quadraticshape", "Quadratic shape:", -20, 20, -4, step=2, animate=TRUE),
            sliderInput("quadraticmidpoint", "Quadratic midpoint:", 270, 320, 295, step=1, animate=TRUE)
          )
        )
	), #tabPanel

	tabPanel(title = "SPECIFIC",
	fluidRow(
	  column(3,
	  h4("Electricity Load Vs. Daily Average Temperature"),
          imageOutput("impactplot_elecload", height = 500, width=300)
	  ),

	  column(3, offset=1,
	  h4("Agricultural Income in Brazil Vs. Rainfall"),
          imageOutput("impactplot_agriculture_brazil", height = 500, width=300)
	  ),

	  column(3, offset=1,
	  h4("Maize Yield in U.S. Vs. Temperature"),
          imageOutput("impactplot_maize_us", height = 500, width=300)
	  )

	)
	), #tabPanel

        tabPanel(title = "FUNCTION LIBRARY 1",
	fluidRow(
	  #h2("=== IMPACT FUNCTION LIBRARY ==="),
	  column(12,
	  h4("Power Consump., GDP, Income, Productivity, etc."),
          imageOutput("impactplot8", height = 500)
	  )
	)
	), #tabPanel

        tabPanel(title = "FUNCTION LIBRARY 2",
	fluidRow(
	  column(12, offset=0,
	  h4("Mortality, Damage, etc."),
          imageOutput("impactplot7", height = 500)
	  )
	)
	), #tabPanel

        tabPanel(title = "FUNCTION LIBRARY 3",
	fluidRow(
	  column(3, 
	  h4("Crops - Temperature"),
          imageOutput("impactplot4", height = 300)
	  ),

	  column(3, offset=1,
	  h4("Crops - Precipitation"),
          imageOutput("impactplot5", height = 300)
	  ),

	  column(3, offset=1,
	  h4("Crops - Derived Variables"),
          imageOutput("impactplot6", height = 300)
	  )
	)
	), #tabPanel

        tabPanel(title = "FUNCTION LIBRARY 4",
	fluidRow(
	  column(3, 
	  h4("Power Generation - Air/Water Temperature"),
          imageOutput("impactplot9", height = 500)
	  ),

	  column(3, offset=3,
	  h4("Water Requirements for Power - Water Temperature"),
          imageOutput("impactplot10", height = 500)
	  )

	)
      ) #tabPanel  
      ) #tabBox
      ),

      tabItem(tabName = "impactestimate",
        h2("Combine climate probabilities and impact functions to estimate probability-weighted net impact"),
        fluidRow(
                    selectInput("impact_selected","IMPACT FUNCTION SOURCE",
                               c("General","Electricity Load","Agricultural Income (Brazil)", "Maize Yield (US)"),
                               selected = c("General")
                    ),
          box(title="Impact Function (controlled from impact-function tab)", background = "blue", solidHeader = TRUE, plotOutput("impactestimateplot3", height = 300)),
          box(title="Probabilistic Impact Estimate", background = "red", solidHeader = TRUE, plotOutput("impactestimateplot2", height = 300))
#          box(
#            title = "Impact Estimate Controls",
#            sliderInput("sigmoidlimit2", "Sigmoid limit:", -100, 100, -75, step=10, animate=TRUE),
#            sliderInput("sigmoidsteepness2", "Sigmoid steepness:", 0.1, 10, 2, step=0.5, animate=TRUE),
#            sliderInput("sigmoidmidpoint2", "Sigmoid midpoint:", 270, 320, 295, step=1, animate=TRUE)
#          )
	),
        fluidRow(
          box(title="Probability of Exceeding Thresholds (based on localized climate projections", background = "yellow", solidHeader = TRUE, plotOutput("impactestimateplot1", height = 300)),
          box(
            title = "Threshold Controls",
            sliderInput("threshold", "Threshold:", 270, 320, 295)
          )
        )
      ),

      tabItem(tabName = "financialeffects",
        h2("Calculate effects of net impact on beta and NPV"),
        fluidRow(
          box(title="Beta Multiplier By Period: 1/(1-D), where D is probabilistic impact", background = "blue", solidHeader = TRUE, plotOutput("financialplot1", height = 300)),
          box(title="NPV Impact on Project", background = "green", solidHeader = TRUE, plotOutput("financialplot2", height = 300)),
          #box(
          #  title = "Multiplier Controls (sigmoid impact function)",
          #  sliderInput("sigmoidlimit3", "Sigmoid limit:", -100, 100, -75, step=10, animate=TRUE),
          #  sliderInput("sigmoidsteepness3", "Sigmoid steepness:", 0.1, 10, 2, step=0.5, animate=TRUE),
          #  sliderInput("sigmoidmidpoint3", "Sigmoid midpoint:", 270, 320, 295, step=1, animate=TRUE)
          #),
          box(
            title = "Capital Cost and Discount Rate",
	    width=4,
            sliderInput("capitalcost", "Total Capital Investment:", 0, 50, 20, step=5, animate=TRUE),
            sliderInput("discount", "Discount Rate:", 0.01, 0.05, 0.03, step=0.005)
          ),
          box(
            title = "Cash Flows for Periods 1-4",
	    width=4,
	     #numericInput("cashflow", "Cash Flow:", 10, min = 1, max = 100),
            sliderInput("cashflow1", "Period 1 Cash Flow:", -10, 100, 1),
            sliderInput("cashflow2", "Period 2 Cash Flow:", -10, 100, 5),
            sliderInput("cashflow3", "Period 3 Cash Flow:", -10, 100, 10),
            sliderInput("cashflow4", "Period 4 Cash Flow:", -10, 100, 20)
          ),
          box(
            title = "Cash Flows for Periods 5-7",
	    width=4,
            sliderInput("cashflow5", "Period 5 Cash Flow:", -10, 100, 30),
            sliderInput("cashflow6", "Period 6 Cash Flow:", -10, 100, 30),
            sliderInput("cashflow7", "Period 7 Cash Flow:", -10, 100, 30)
          )
        )
      ),

      tabItem(tabName = "sustainable_infrastructure",
        #h2("Climate risk assessment and adaptation planning throughout the transaction cycle"),
        h2("Align financial flows with country pathways to low-carbon and climate-resilient development"),
        fluidRow(
          box(
            title = "Economic Sector",
  	    selectInput("econsector", "Choose economic sector:", list("Power","Agriculture","Water") ),
	    width=3,
    	    textOutput("econsector")
          ),
          box(
            title = "ESG Assessment",
  	    selectInput("esgassessment", "Choose ESG assessment:", list("Low","Moderate","High") ),
	    width=3,
    	    textOutput("esgassessment")
          )
        )
      ),

      tabItem(tabName = "adaptationplanning",
        h2("Calculate adaptation benefit/cost ratio"),
        fluidRow(
	  box(title="Impact Function (controlled from Sector Impact tab)", background = "blue", solidHeader = TRUE, plotOutput("adaptationplot1", height=300)),
	  box(title="Asset Value Through Time", background = "red", solidHeader = TRUE, plotOutput("adaptationplot2", height=300))
        ),
        fluidRow(
          box(
            title = "Asset Values ($M)",
            sliderInput("assetvalue1", "Value of Asset 1:", 0, 100, 1, animate=TRUE),
            sliderInput("assetvalue2", "Value of Asset 2:", 0, 100, 5, animate=TRUE),
            sliderInput("assetvalue3", "Value of Asset 3:", 0, 100, 10, animate=TRUE),
	    width=3
          ),
          box(
            title = "Relative Asset Sensitivities to Impact Function (no adaptation)",
            sliderInput("assetsensitivity1", "Impact Sensitivity of Asset 1:", 0, 5, 1, step=0.25, animate=TRUE),
            sliderInput("assetsensitivity2", "Impact Sensitivity of Asset 2:", 0, 5, 1, step=0.25, animate=TRUE),
            sliderInput("assetsensitivity3", "Impact Sensitivity of Asset 3:", 0, 5, 1, step=0.25, animate=TRUE),
	    width=3
          ),
          box(
            #title = "Adaptation Plan 1",
    	    title = textOutput("adaptationbenefit1"),
            sliderInput("assetsensitivity1_plan1", "Plan 1 Impact Sensitivity of Asset 1:", 0, 5, 0.5, step=0.25, animate=TRUE),
            sliderInput("assetsensitivity2_plan1", "Plan 1 Impact Sensitivity of Asset 2:", 0, 5, 0.5, step=0.25, animate=TRUE),
            sliderInput("assetsensitivity3_plan1", "Plan 1 Impact Sensitivity of Asset 3:", 0, 5, 0.5, step=0.25, animate=TRUE),
            sliderInput("discount2", "Discount Rate:", 0.01, 0.05, 0.03, step=0.005),
            sliderInput("cost2implement_plan1", "Plan 1 Implementation Cost ($M):", 0, 20, 5, step=1, animate=TRUE),
            sliderInput("cost2maintain_relative2base_plan1", "Plan 1 Discounted Maintenance & Repair Costs Relative to No-adaptation Case ($M):", -20, 20, 2, step=1, animate=TRUE),
	    width=3
          ),
          box(
            #title = "Adaptation plan 2",
    	    title = textOutput("adaptationbenefit2"),
            sliderInput("assetsensitivity1_plan2", "Plan 2 Impact Sensitivity of Asset 1:", 0, 5, 0.25, step=0.25, animate=TRUE),
            sliderInput("assetsensitivity2_plan2", "Plan 2 Impact Sensitivity of Asset 2:", 0, 5, 0.25, step=0.25, animate=TRUE),
            sliderInput("assetsensitivity3_plan2", "Plan 2 Impact Sensitivity of Asset 3:", 0, 5, 0.25, step=0.25, animate=TRUE),
            sliderInput("discount3", "Discount Rate:", 0.01, 0.05, 0.03, step=0.005),
            sliderInput("cost2implement_plan2", "Plan 2 Implementation Cost ($M):", 0, 20, 5, step=1, animate=TRUE),
            sliderInput("cost2maintain_relative2base_plan2", "Plan 2 Discounted Maintenance & Repair Costs Relative to No-adaptation Case ($M):", -20, 20, 5, step=1, animate=TRUE),
	    width=3
          )
        )
      ),

      tabItem(tabName = "climatescore",
        h2("Derive climate score from impacts, financial effects, and adaptation actions"),
        fluidRow(
          box(title="Impact Function (controlled from impact-function tab)", background = "blue", solidHeader = TRUE, plotOutput("scoreplot2", height = 300)),
          box(title="Climate Score By Period", background = "green", solidHeader = TRUE, plotOutput("scoreplot1", height = 300)),

          #box(
          #  title = "Impact Function Controls (sigmoid impact function)",
          #  sliderInput("sigmoidlimit4", "Sigmoid limit:", -100, 100, -75, step=10, animate=TRUE),
          #  sliderInput("sigmoidsteepness4", "Sigmoid steepness:", 0.1, 10, 2, step=0.5, animate=TRUE),
          #  sliderInput("sigmoidmidpoint4", "Sigmoid midpoint:", 270, 320, 295, step=1, animate=TRUE)
          #),

          box(
            title = "Adaptation Credits",
  	    selectInput("adaptationplan", "Choose an adaptation plan:", list("None","Minimal","Moderate","Maximal") ),
    		textOutput("adaptationplan")
          )
        )
      ),

      tabItem(tabName = "database",
        h2("Databases link detailed calculations with user interface"),
        fluidRow(
          box(
    	    title = textOutput("database1_name"),
	    width=3
          ),

          box(
    	    title = textOutput("database2_name"),
	    width=3
          ),

          box(
    	    title = textOutput("database2_table12_contents"),
	    width=6
          ),

          textInput("addquestion","Add Question",value="enter question"),
          textInput("write_new_table","Write New Table",value="No"),
	  textOutput("database2_write")

        ) #end fluidRow
      ) #end database tabItem

    )
  )
) #end ui

