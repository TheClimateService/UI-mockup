
# SCRIPT TO FIND LATEST ENTRY FOR EACH FACILITY IN THE USER DATA RECORDS AND APPLY THIS DATA TO SCORING ENGINE INPUTS.
# TT - February 2018

# Execution:  ./script_apply_userdata4SE <user data file> <target SE input file to be modified>
# Example:    ./script_apply_userdata4SE ./user_data.csv ../scoring_engine/nonphysical/locationvalues4SE.csv

# Format of the user_data.csv file:
# 1519139219;4 ; All locations ; Agriculture ; - ; - ; - ; Tue_Feb_20_10:06:59_EST_2018
# 1519139225;4 ; Indooroopilly_Shopping_Centre ; - ; 250 ; 100 ; Clean Room Manufacturing, R&D ; Tue_Feb_20_10:07:05_EST_2018
# The columns above are:  "Date_seconds" "USER.ParentCorpID" "input.rbLocations" "input.cbGroupBizType" "input.txtNumEmployees" "input.txtAssetValue" "cbBusinessFunctions" "Date"

# Format of the locationvalues4SE.csv file:
# "LocationID";"ParentCorpID";"LocationName";"df_tx90p";"df_pdsisc";"df_coastalflood";"df_carbonprice";"df_tbd2";"df_tbd3"
# 1;1;"Boise";100;90;80;0.4;"-";"-"
# 2;1;"Manassas";100;90;80;0.4;"-";"-"

# Get input.
userdata=$1
locvalues=$2

# Remove spaces before/after semicolons in userdata file
sed 's/; /;/g' $userdata | sed 's/ ;/;/g' > temp0

# Sort by date_seconds and save latest entry for given facility.
#sort -r --field-separator=';' $userdata > temp1
awk '{if(NR==1) print $0}' $userdata.header > temp1.hdr
#cat temp1.hdr $userdata > temp1
cat temp1.hdr temp0 > temp1
awk '{FS=";"; if(NR>1) print $2,$3,$1,$0}' temp1 > temp2
sort -r temp2 > temp2b
# Note that spaces in userdata file force use of "7" below (vice "4") to discard the first three fields.
#cut -d " " -f 7-999 temp2b > temp2c
cut -d ";" -f 2-999 temp2b > temp2c
cat temp1.hdr temp2c > temp2d
awk '{FS=";"; id=$1"_"$2;  \
      if(NR>1 && id!=lastid) print $0;  \
      lastid=id}' temp2d > temp3

# Match on USER.ParentCorpID and input.rbLocations.
# First remove extra spaces in these fields and handle space in "All locations".
#sed 's/ //' temp3 | sed 's/ //' | sed 's/ //' | sed 's/Alllocations /All locations/' > temp3b
cp temp3 temp3b
echo LASTLINE > temp3b.ftr
echo FIRSTLINE > temp3b.hdr
cat temp3b.hdr temp3b temp3b.ftr > temp3c
awk -v locvalues=$locvalues '{FS=";";  \
      # Following 2 lines simply mark matching records with "XXX".
      # if(NR==2 && $1!="LASTLINE") print "awk SSS{FS=DDD;DDD; if($2=="$1" && substr($3,2,length($3)-2)==DDD"$2"DDD) print $0,DDDXXXDDD; else print $0}SSS "locvalues" > temp99."NR;  \
      # if(NR>2 && $1!="LASTLINE") print "awk SSS{FS=DDD;DDD; if($2=="$1" && substr($3,2,length($3)-2)==DDD"$2"DDD) print $0,DDDXXXDDD; else print $0}SSS temp99."(NR-1)" > temp99."NR;  \
      # XXX Following 2 lines replace facility value for the 3 current physical DFs.  These will need to be modified if the number of physical DFs changes or if they are reordered.
      if(NR==2 && $1!="LASTLINE") print "awk SSS{FS=DDD;DDD; if($2=="$1" && substr($3,2,length($3)-2)==DDD"$2"DDD) print $1;;;$2;;;$3;;;DDD"$5";"$5";"$5";DDD$7;;;$8;;;$9; else print $0}SSS "locvalues" > temp99."NR;  \
      if(NR>2 && $1!="LASTLINE") print "awk SSS{FS=DDD;DDD; if($2=="$1" && substr($3,2,length($3)-2)==DDD"$2"DDD) print $1;;;$2;;;$3;;;DDD"$5";"$5";"$5";DDD$7;;;$8;;;$9; else print $0}SSS temp99."(NR-1)" > temp99."NR;  \
      if($1=="LASTLINE") print "mv temp99."(NR-1)" temp100"  \
     }' temp3c > temp4
sed "s/SSS/'/g" temp4 > temp5
sed 's/DDD/"/g' temp5 > temp6
sed 's/;;;/";"/g' temp6 > temp7
chmod a+x temp7
./temp7

# Remove extra spaces in output from above.
sed 's/ //g' temp100 > temp101

# Save results and clean up.
cut -d " " -f 2-999 temp1.hdr | sed 's/ /;/g' > temp3.hdr
cat temp3.hdr temp3b > $userdata.latest.csv
mv temp101 ./data/TCSDB/locationvalues4SE_with_userdata_mods
rm temp*

