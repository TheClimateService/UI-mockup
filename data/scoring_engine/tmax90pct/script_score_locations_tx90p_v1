
# SCRIPT TO SCORE EACH LOCATION BASED ON TX90P VALUES FROM HISTORICAL AND RCP DATA.
# TT - December 2017

# Execution:  ./script_score_locations_tx90p_v1 <damage-function file> <facility location file> <input file of location-specific tx90p data>
# Example:    ./script_score_locations_tx90p_v1 damage_functions_v1.csv facility_locations.csv.testNA facility_locations.csv.testNA.tx90p

# Input data format for the facility_locations.csv.testNA.tx90p file, showing five 30-year historical values and nine 10-year rcp values:
# Micron_Boise -116.149136 43.529396	326 178 243.750000 43.035227  7.74823 7.58457 7.75819 7.99365 11.678	326 178 243.750000 43.035227  11.8022 13.7167 22.5887 22.3918 21.6339 26.7736 32.0368 40.5988 46.5782
# Micron_Manassas -77.503845 38.750829	378 171 282.750000 37.796162  13.2247 11.9103 10.9431 12.4477 12.095	378 171 282.750000 37.796162  23.6034 20.6159 20.5656 25.1841 32.9641 37.6712 45.9766 47.2761 51.7231

# Get input:
dfsource=$1
locfile=$2
locvalues=$3

# Get damage-function values specific to each location.
# Note that the damage-function csv file is assumed to be comma-separated.
#awk -v dfid=$dfid '{FS=","; if($1==dfid) print $1,$(NF-1),$NF}' $locfile > temp1
awk '{if(NR>1) print $5}' $locfile > temp1
awk -v dfsource=$dfsource '{print "awk SSS{FS=DDD,DDD; if($1==DDD"$1"DDD) print $1,$(NF-1),substr($NF,1,length($NF)-1)}SSS "dfsource" >> temp10"}' temp1 > temp2
sed 's/DDD/"/g' temp2 > temp2b
sed "s/SSS/'/g" temp2b > temp2c
chmod a+x temp2c
./temp2c
paste temp10 $locvalues > temp11

# Apply the damage functions.
# Note that the historical value of tx90p is in a specific column that depends on the format of the facilities.tx90p file, including the number of historical periods defined (currently 5).  Additionally, 3 fields from the df file are prepended in the paste above, so the input to this step has the form:
# tx90p-1 0;20;40;60;80;100 100;100;90;70;50;30 Micron_Boise -116.149136 43.529396	326 178 243.750000 43.035227  7.74823 7.58457 7.75819 7.99365 11.678	326 178 243.750000 43.035227  11.8022 13.7167 22.5887 22.3918 21.6339 26.7736 32.0368 40.5988 46.5782
# This impacts the values assigned to xhist and startxrcp in the first line below.
awk '{xhist=$15; startxrcp=20; yrcpall=""; xrcpindall="";  \
      for(i=startxrcp; i<=NF; i++) {xrcp[i]=$i; xrcpindex[i]=999; yrcp[i]=999};  \
      split($2,xarray,";"); xlen=length(xarray);  \
      split($3,yarray,";"); ylen=length(yarray);  \
      for(i=2; i<=xlen; i++) if(xhist>=xarray[i-1] && xhist<xarray[i]) xindex=i-1;  \
      yhist= yarray[xindex] + (xhist-xarray[xindex])*(yarray[xindex+1] - yarray[xindex]) / (xarray[xindex+1] - xarray[xindex]);  \
      for(i=startxrcp; i<=NF; i++) {  \
      	for(j=2; j<=xlen; j++) if(xrcp[i]>=xarray[j-1] && xrcp[i]<xarray[j]) xrcpindex[i]=j-1;  \
        yrcp[i]=yarray[xrcpindex[i]] + (xrcp[i]-xarray[xrcpindex[i]])*(yarray[xrcpindex[i]+1] - yarray[xrcpindex[i]]) / (xarray[xrcpindex[i]+1] - xarray[xrcpindex[i]]);  \
        yrcpall=yrcpall" "yrcp[i]; xrcpindall=xrcpindall" "xrcpindex[i]  };  \
      print $0,yhist,yrcpall}' temp11 > temp12
      #print $0,yhist,yrcpall,xrcpindall}' temp11 > temp12

# Convert the damages through time to be relative to the last historical period.
# More damage in a future period than in the last historical period will be given as a negative number.
awk '{nfutperiods=9; yhist=$(NF-nfutperiods);  \
      #for(i=1; i<=nfutperiods; i++) {score[i]=$(NF-i+1)-yhist; scoreall=scoreall" "score[i]};  \
      for(i=1; i<=nfutperiods; i++) {score[i]=$(NF-nfutperiods+i)-yhist; scoreall=scoreall" "score[i]};  \
      print $1,scoreall; scoreall=""}' temp12 > temp13
      # (used when including trace information for debugging) print $4,$5,$6,$7,$8,$9,$10,scoreall; scoreall=""}' temp12 > temp13

echo "df_used dperiod1 dperiod2 dperiod3 dperiod4 dperiod5 dperiod6 dperiod7 dperiod8 dperiod9" > temp13.hdr
cat temp13.hdr temp13 > temp14

# Save results and clean up.
#mv temp13 $locvalues.damages
paste $locfile temp14 > $locvalues.damages
rm temp*

