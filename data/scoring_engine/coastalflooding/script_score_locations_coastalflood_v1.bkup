
# SCRIPT TO SCORE THE COASTAL FLOOD RETURN PERIODS FOR EACH LOCATION
# TT - December 2017

# Execution:  ./script_score_locations_coastalflood_v1 <damage-function file> <input facilities file> <future annual probabilities for the facilities file from r script_estimate_future_rp_v1.r>
# Example:  ./script_score_locations_coastalflood_v1 damage_functions_v1.csv facility_locations.csv.testNA future_annprob_fromR

# Get input.
dfsource=$1
locfile=$2
futannpfile=$3

# Merge the location data and the future return periods.  Also insert the annual probability corresponding to the selected historical rp.
awk '{if(NR==1) print $1,$2,$3,"annPhistorical"; else print $1,$2,$3,"0.01"}' $locfile > temp0
paste temp0 $futannpfile > temp0b
awk '{if(NR>1) print $0}' temp0b > temp0c

# Convert the rp values to annual probabilities since these are used in the damage functions.

# Get damage-function values specific to each location.
# Note that the damage-function csv file is assumed to be comma-separated and the field corresponding to the coastalflood df in the locfile is field 7.
#awk -v dfid=$dfid '{FS=","; if($1==dfid) print $1,$(NF-1),$NF}' $locfile > temp1
awk '{if(NR>1) print $7}' $locfile > temp1
awk -v dfsource=$dfsource '{print "awk SSS{FS=DDD,DDD; if($1==DDD"$1"DDD) print $1,$(NF-1),substr($NF,1,length($NF)-1)}SSS "dfsource" >> temp10"}' temp1 > temp2
sed 's/DDD/"/g' temp2 > temp2b
sed "s/SSS/'/g" temp2b > temp2c
chmod a+x temp2c
./temp2c
paste temp10 temp0c > temp11

# Apply the damage functions.
# Format for the input to this step has annual probabilities corresponding to the historical rp and 9 future rps in the last 10 columns:
# coastalflood-1 0;0.01;0.1;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1.0 100;100;90;70;50;30;10;0;0;0;0;0	Micron_Boise -116.149136 43.529396 0.01	Inf Inf Inf Inf Inf Inf Inf Inf Inf
# coastalflood-2 0;0.01;0.1;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1.0 100;100;70;50;30;10;0;0;0;0;0;0	Micron_Manassas -77.503845 38.750829 0.01	0.0178642838383691 0.0492554808424173 0.141744282654522 0.386723528550437 NA NA NA NA NA
# The corresponding rp values from R, although not used here, are:
# coastalflood-1 0;0.01;0.1;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1.0 100;100;90;70;50;30;10;0;0;0;0;0	Micron_Boise -116.149136 43.529396 100	0 0 0 0 0 0 0 0 0
# coastalflood-2 0;0.01;0.1;0.2;0.3;0.4;0.5;0.6;0.7;0.8;0.9;1.0 100;100;70;50;30;10;0;0;0;0;0;0	Micron_Manassas -77.503845 38.750829 100	55.9776148345892 20.3023091622899 7.05495827607618 2.58582663368924 NA NA NA NA NA
awk '{xhist=$(NF-9); startxrcp=NF-8; yrcpall=""; xrcpindall="";  \
      for(i=startxrcp; i<=NF; i++) {xrcp[i]=$i; xrcpindex[i]=999; yrcp[i]=999};  \
      split($2,xarray,";"); xlen=length(xarray);  \
      split($3,yarray,";"); ylen=length(yarray);  \
      for(i=2; i<=xlen; i++) if(xhist>=xarray[i-1] && xhist<xarray[i]) xindex=i-1;  \
      yhist= yarray[xindex] + (xhist-xarray[xindex])*(yarray[xindex+1] - yarray[xindex]) / (xarray[xindex+1] - xarray[xindex]);  \
      for(i=startxrcp; i<=NF; i++) {  \
        yrcp[i]=1;  \
	if(xrcp[i]=="Inf") yrcp[i]="NA";  \
        if(xrcp[i]!="Inf" && xrcp[i]!="NA") {  \
          for(j=2; j<=xlen; j++) if(xrcp[i]>=xarray[j-1] && xrcp[i]<xarray[j]) {xrcpindex[i]=j-1; lastxrcpindex=j-1};  \
	  yrcp[i]=yarray[xrcpindex[i]] + (xrcp[i]-xarray[xrcpindex[i]])*(yarray[xrcpindex[i]+1] - yarray[xrcpindex[i]]) / (xarray[xrcpindex[i]+1] - xarray[xrcpindex[i]])  \
          };  \
	if(xrcp[i]=="NA") yrcp[i]=yarray[lastxrcpindex + 1]
        yrcpall=yrcpall" "yrcp[i]; xrcpindall=xrcpindall" "xrcpindex[i]  \
       };  \
      print $0,yhist,yrcpall}' temp11 > temp12

# Convert the damages through time to be relative to the last historical period.
# More damage in a future period than in the last historical period will be given as a negative number.
awk '{nfutperiods=9; yhist=$(NF-nfutperiods);  \
      #for(i=1; i<=nfutperiods; i++) {score[i]=$(NF-i+1)-yhist; scoreall=scoreall" "score[i]};  \
      for(i=1; i<=nfutperiods; i++) {  \
          value=$(NF-nfutperiods+i);  \
          if(value=="NA") score[i]=value; else score[i]=$(NF-nfutperiods+i)-yhist;  \
          scoreall=scoreall" "score[i]};  \
      print $1,scoreall; scoreall=""}' temp12 > temp13
   # (used when including trace information for debugging) print $4,$5,$6,$7,$8,$9,$10,scoreall; scoreall=""}' temp12 > temp13

echo "df_used dperiod1 dperiod2 dperiod3 dperiod4 dperiod5 dperiod6 dperiod7 dperiod8 dperiod9" > temp13.hdr
cat temp13.hdr temp13 > temp14

# Save results and clean up.
#mv temp13 $locvalues.damages
paste $locfile temp14 > $locfile.coastalflood.damages
rm temp*


