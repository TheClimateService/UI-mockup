
# SCRIPT TO FIND THE SLR STATION NEAREST EACH GTSR COASTAL LINE-SEGMENT CENTROID.
# TT - December 2017

# Execution:  ./script_get_nearest_station_v1 <input lon> <input lat> <slr station file>
# Example:    ./script_get_nearest_station_v1 -1.657 5 kopp_2014_eft237-sup-0006-Table07.tsv.extracted.with.lonlat

# Format of station data:
# Site ID Long Lat
# REYKJAVIK 638 -21.94 64.15
# TORSHAVN 839 -6.77 62.02

# Get input.
inlon=$1
inlat=$2
stationfile=$3
cp $stationfile temp1

# Extract line-segment centroid unique id (CLSFID), lon, and lat.
# $0 below is carried along to give easy access to the return-level data after the nearest segment is found.
# awk '{FS=","; if(NR>1) print $3,$8,$6,$0}' $stationfile > temp1

# Calculate the GC distance between each centroid and a given lon/lat.
# ------------------------------
# Vincenty formula for GC distance:
#       y = sqrt( (cos(lat2)*sin(lon2-lon1))^2 + ( cos(lat1)*sin(lat2) - sin(lat1)*cos(lat2)*cos(lon2-lon1) )^2)
#       x = sin(lat1)*sin(lat2) + cos(lat1)*cos(lat2)*cos(lon2-lon1)
#       theta = arctan(y/x) = atan2(y,x)
#
# http://www.movable-type.co.uk/scripts/latlong.html
# This is the half-way point along a great circle path between the two points.
# Formula:      Bx = cos(lat2).cos(Δlong)
#               By = cos(lat2).sin(Δlong)
#               latm = atan2( sin(lat1) + sin(lat2), √((cos(lat1)+Bx)² + By²) )
#               lonm = lon1 + atan2(By, cos(lat1)+Bx)
# ------------------------------
echo LASTLINE >> temp1
awk -v inlon=$inlon -v inlat=$inlat '{  \
        rEarthnm=6887.7/2; rad2deg=180/3.14159; \
	# TEST  lat1=0.0/rad2deg; lon1=-40.0/rad2deg; lat2=0.0/rad2deg; lon2=140.0/rad2deg;  \
        # lat1deg=$3; lon1deg=$2; lat2deg=0.0; lon2deg=0.0;  \
        #lat1=$3/rad2deg; lon1=$2/rad2deg; lat2=4.98/rad2deg; lon2=-1.657/rad2deg;  \
        lat1=$4/rad2deg; lon1=$3/rad2deg; lat2=inlat/rad2deg; lon2=inlon/rad2deg;  \
        y = sqrt( (cos(lat2)*sin(lon2-lon1))^2 + ( cos(lat1)*sin(lat2) - sin(lat1)*cos(lat2)*cos(lon2-lon1) )^2 );  \
        x = sin(lat1)*sin(lat2) + cos(lat1)*cos(lat2)*cos(lon2-lon1);  \
        theta=atan2(y,x);  \
        thetadeg=rad2deg*theta;  \
        gcdistnm=rEarthnm*theta;  \
	if(NR==1) {mindistnm=gcdistnm; mindistid=$1; mindistdata=$0};  \
	if(gcdistnm < mindistnm) {mindistnm=gcdistnm; mindistid=$1; mindistdata=$0};  \
        if($1=="LASTLINE") {mindistkm=1.852*mindistnm; print mindistkm,mindistid,mindistdata}  \
	#if(NR==1) {mindistnm=gcdistnm; mindistid=$1; mindistdata=$4};  \
	#if(gcdistnm < mindistnm) {mindistnm=gcdistnm; mindistid=$1; mindistdata=$4};  \
        #if($1=="LASTLINE") {mindistkm=1.852*mindistnm; print mindistkm,mindistid,mindistdata}  \
        #print $0, gcdistnm, mindistnm, mindistid
        }' temp1 > temp2

# Clean up the data.
# Format of temp2 is:
# 16.8765 TAKORADI TAKORADI 331 -1.75 4.88        TAKORADI 331 Bkgd:_-2.35_+/-_0.89_mm/y 8 19 60 8 16 39 8 15 29
#awk '{print $1,$3,$4,$5,$6,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18}' temp2 > temp2b
#echo "mindistkm station id background_rate rcp85_2030cm rcp85_2050cm rcp85_2100cm rcp45_2030cm rcp45_2050cm rcp45_2100cm rcp26_2030cm rcp26_2050cm rcp26_2100cm" > temp2b.hdr
#echo "mindistkm,station,id,background_rate,rcp85_2030cm,rcp85_2050cm,rcp85_2100cm,rcp45_2030cm,rcp45_2050cm,rcp45_2100cm,rcp26_2030cm,rcp26_2050cm,rcp26_2100cm" > temp2b.hdr
awk '{print ","$1","$3","$4","$5","$6","$9","$10","$11","$12","$13","$14","$15","$16","$17","$18}' temp2 > temp2b

# Save results.
mv temp2b temp2.single

